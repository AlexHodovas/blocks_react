{"version":3,"sources":["components/buttonsWrappers/AddRowButtonWrapper.js","components/styleVars.js","components/buttonsWrappers/AddColumnButtonWrapper.js","components/button/Button.js","components/tableWrapper/TableWrapper.js","components/buttonsWrappers/DeleteRowButtonWrapper.js","components/buttonsWrappers/DeleteColumnButtonWrapper.js","components/td/Td.js","components/tr/Tr.js","components/table/Table.js","components/tables/Tables.js","App.js","index.js"],"names":["AddRowButtonWrapper","styled","div","buttonSize","AddColumnButtonWrapper","Button","symbol","clickFunction","onClick","className","TableWrapper","DeleteRowButtonWrapper","theme","isDeleteRowButtonHidden","rowIndex","cellSize","Wrapper","DeleteColumnButtonWrapper","isDeleteColumnButtonHidden","colIndex","Td","targetColumnIndex","updateActiveColIndex","onMouseOver","key","Tr","tr","targetRowIndex","updateActiveRowIndex","cells","map","_","i","Table","initialWidth","initialHeight","useState","activeColIndex","setActiveColIndex","activeRowIndex","setActiveRowIndex","setDeleteRowButtonHidden","setDeleteColumnButtonHidden","Array","fill","cols","setCols","rowId","rows","setRows","isOnlyOneColumn","every","length","isOnlyOneRow","useEffect","onMouseEnter","id","tableHeight","tableWidth","filter","Tables","arrayOfTables","amountTables","shiftX","shiftY","target","moveAt","pageX","pageY","style","transform","onMouseMove","e","onDragStart","preventDefault","onMouseDown","tagName","parentNode","findTargetForMoving","clientX","getBoundingClientRect","left","findShiftX","clientY","top","findShiftY","document","addEventListener","onmouseup","removeEventListener","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1864c4ed.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport {\n  buttonSize,\n  backgroundColorInAddButton,\n  spaceBetweenTableAndButtons\n} from \"../styleVars\";\n\nconst AddRowButtonWrapper = styled.div`\n  position: absolute;\n  bottom: ${spaceBetweenTableAndButtons};\n  left: ${buttonSize + 1}px;\n  transition: opacity 1s, transform 0.5s;\n  background-color: ${backgroundColorInAddButton};\n\n  &:hover {\n    opacity: 0.6;\n  }\n`;\n\nexport default AddRowButtonWrapper;\n","export const cellSizePX = `48px`;\nexport const buttonSize = 48;\nexport const backgroundColorInAddButton = `#f4a400`;\nexport const backgroundColorDeleteButton = `#b10000`;\nexport const spaceBetweenTableAndButtons = `-2px`;\nexport const mainColor = `#4aaae7`;\n","import styled from \"styled-components\";\nimport {\n  buttonSize,\n  backgroundColorInAddButton,\n  spaceBetweenTableAndButtons\n} from \"../styleVars\";\n\nconst AddColumnButtonWrapper = styled.div`\n  position: absolute;\n  top: ${buttonSize + 1}px;\n  right: ${spaceBetweenTableAndButtons};\n  transition: opacity 1s, transform 0.5s;\n  background-color: ${backgroundColorInAddButton};\n\n  &:hover {\n    opacity: 0.6;\n  }\n`;\n\nexport default AddColumnButtonWrapper;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ symbol, clickFunction }) => (\n  <button onClick={clickFunction} className=\"button\">\n    {symbol}\n  </button>\n);\n\nButton.propTypes = {\n  symbol: PropTypes.string.isRequired,\n  clickFunction: PropTypes.func.isRequired\n};\n\nexport default Button;\n","import styled from \"styled-components\";\nimport { cellSizePX } from \"../styleVars\";\n\nconst TableWrapper = styled.div`\n  position: relative;\n  width: fit-content;\n  padding: ${cellSizePX};\n  cursor: grab;\n`;\nexport default TableWrapper;\n","import styled from \"styled-components\";\nimport Wrapper from \"../tableWrapper/TableWrapper\";\nimport {\n  backgroundColorDeleteButton,\n  spaceBetweenTableAndButtons\n} from \"../styleVars\";\n\nconst DeleteRowButtonWrapper = styled.div`\n  display: ${({ theme }) => (theme.isDeleteRowButtonHidden ? \"none\" : \"block\")};\n  position: absolute;\n  top: -2px;\n  left: ${spaceBetweenTableAndButtons};\n  transition: opacity 1s, transform 0.5s;\n  transform: translateY(\n    ${({ theme }) => 2 + (theme.rowIndex + 1) * theme.cellSize}px\n  );\n\n  ${Wrapper}:hover & {\n    background-color: ${backgroundColorDeleteButton};\n  }\n\n  &:hover {\n    opacity: 0.6;\n  }\n`;\nexport default DeleteRowButtonWrapper;\n","import styled from \"styled-components\";\nimport Wrapper from \"../tableWrapper/TableWrapper\";\nimport { backgroundColorDeleteButton } from \"../styleVars\";\n\nconst DeleteColumnButtonWrapper = styled.div`\n  display: ${({ theme }) =>\n    theme.isDeleteColumnButtonHidden ? \"none\" : \"block\"};\n  position: absolute;\n  top: -2px;\n  transition: opacity 1s, transform 0.5s;\n  transform: translateX(\n    ${({ theme }) => theme.colIndex * theme.cellSize + 2}px\n  );\n\n  ${Wrapper}:hover & {\n    background-color: ${backgroundColorDeleteButton};\n  }\n\n  &:hover {\n    opacity: 0.6;\n  }\n`;\nexport default DeleteColumnButtonWrapper;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Td = ({ targetColumnIndex, updateActiveColIndex }) => (\n  <td\n    className=\"td\"\n    onMouseOver={() => {\n      updateActiveColIndex(targetColumnIndex);\n    }}\n    key={targetColumnIndex}\n  ></td>\n);\n\nTd.propTypes = {\n  targetColumnIndex: PropTypes.number.isRequired,\n  updateActiveColIndex: PropTypes.func.isRequired\n};\n\nexport default Td;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Td from \"../td/Td\";\n\nconst Tr = ({\n  tr,\n  targetRowIndex,\n  updateActiveColIndex,\n  updateActiveRowIndex\n}) => (\n  <tr\n    onMouseOver={() => {\n      updateActiveRowIndex(targetRowIndex);\n    }}\n  >\n    {tr.cells.map((_, i) => (\n      <Td\n        key={i}\n        targetColumnIndex={i}\n        updateActiveColIndex={updateActiveColIndex}\n      />\n    ))}\n  </tr>\n);\n\nTr.propTypes = {\n  tr: PropTypes.object.isRequired,\n  targetRowIndex: PropTypes.number.isRequired,\n  updateActiveColIndex: PropTypes.func.isRequired,\n  updateActiveRowIndex: PropTypes.func.isRequired\n};\n\nexport default Tr;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport AddRowButtonWrapper from \"../buttonsWrappers/AddRowButtonWrapper\";\nimport AddColumnButtonWrapper from \"../buttonsWrappers/AddColumnButtonWrapper\";\nimport Button from \"../button/Button\";\nimport DeleteRowButtonWrapper from \"../buttonsWrappers/DeleteRowButtonWrapper\";\nimport DeleteColumnButtonWrapper from \"../buttonsWrappers/DeleteColumnButtonWrapper\";\nimport Tr from \"../tr/Tr\";\n\nconst Table = ({ initialWidth, initialHeight, cellSize }) => {\n  const [activeColIndex, setActiveColIndex] = useState(0);\n  const [activeRowIndex, setActiveRowIndex] = useState(0);\n  const [isDeleteRowButtonHidden, setDeleteRowButtonHidden] = useState(false);\n  const [isDeleteColumnButtonHidden, setDeleteColumnButtonHidden] = useState(\n    false\n  );\n\n  const [cols, setCols] = useState(\n    new Array(initialHeight).fill(null).map((_, i) => i)\n  );\n\n  const [rows, setRows] = useState(\n    new Array(initialWidth).fill({}).map((_, i) => ({\n      rowId: i,\n      cells: cols\n    }))\n  );\n\n  const addRow = () => {\n    setRows([\n      ...rows,\n      {\n        rowId: rows.length,\n        cells: cols\n      }\n    ]);\n  };\n\n  const addColumn = () => {\n    setCols([...cols, cols.length]);\n  };\n\n  const deleteRow = () => {\n    setRows(rows.filter((_, i) => i !== activeRowIndex));\n  };\n\n  const deleteColumn = () => {\n    setCols(cols.filter((_, i) => i !== activeColIndex));\n  };\n\n  const isOnlyOneColumn = () => rows.every(({ cells }) => cells.length === 1);\n\n  const isOnlyOneRow = () => rows.length === 1;\n\n  useEffect(() => {\n    setRows(\n      new Array(rows.length).fill(null).map((_, i) => ({\n        rowId: i,\n        cells: cols\n      }))\n    );\n  }, [rows.length, cols]);\n\n  return (\n    <>\n      <table\n        className=\"table\"\n        onMouseEnter={() => {\n          setDeleteRowButtonHidden(isOnlyOneRow());\n          setDeleteColumnButtonHidden(isOnlyOneColumn());\n        }}\n      >\n        <tbody>\n          {rows.map((tr, targetRowIndex) => (\n            <Tr\n              key={tr.rowId}\n              tr={tr}\n              targetRowIndex={targetRowIndex}\n              updateActiveColIndex={setActiveColIndex}\n              updateActiveRowIndex={setActiveRowIndex}\n            />\n          ))}\n        </tbody>\n      </table>\n\n      <AddRowButtonWrapper>\n        <Button\n          id=\"addRowButton\"\n          clickFunction={addRow}\n          symbol={\"+\"}\n          tableHeight={rows.length}\n        />\n      </AddRowButtonWrapper>\n\n      <AddColumnButtonWrapper>\n        <Button\n          id=\"addColumnButton\"\n          clickFunction={addColumn}\n          symbol={\"+\"}\n          tableWidth={cols.length}\n        />\n      </AddColumnButtonWrapper>\n\n      <ThemeProvider\n        theme={{\n          colIndex: activeColIndex,\n          rowIndex: activeRowIndex,\n          cellSize,\n          isDeleteRowButtonHidden,\n          isDeleteColumnButtonHidden\n        }}\n      >\n        <DeleteColumnButtonWrapper>\n          <Button\n            id=\"deleteColumnButton\"\n            clickFunction={() => {\n              deleteColumn();\n              setDeleteColumnButtonHidden(true);\n            }}\n            symbol={\"-\"}\n            tableWidth={cols.length}\n            isDeleteColumnButtonHidden={isDeleteColumnButtonHidden}\n            isOnlyOneColumn={isOnlyOneColumn}\n          />\n        </DeleteColumnButtonWrapper>\n\n        <DeleteRowButtonWrapper>\n          <Button\n            id=\"deleteRowButton\"\n            clickFunction={() => {\n              deleteRow();\n              setDeleteRowButtonHidden(true);\n            }}\n            symbol={\"-\"}\n            tableHeight={rows.length}\n            isDeleteRowButtonHidden={isDeleteRowButtonHidden}\n            isOnlyOneRow={isOnlyOneRow}\n          />\n        </DeleteRowButtonWrapper>\n      </ThemeProvider>\n    </>\n  );\n};\n\nTable.propTypes = {\n  initialWidth: PropTypes.number.isRequired,\n  initialHeight: PropTypes.number.isRequired,\n  cellSize: PropTypes.number.isRequired\n};\n\nexport default Table;\n","import React from \"react\";\nimport Table from \"../table/Table\";\nimport TableWrapper from \"../tableWrapper/TableWrapper\";\nimport { amountTables, initialWidth, initialHeight, cellSize } from \"../../App\";\n\nconst Tables = () => {\n  const arrayOfTables = new Array(amountTables).fill(null);\n  let shiftX = null;\n  let shiftY = null;\n  let target = null;\n\n  const findTargetForMoving = e => {\n    let target = e.target;\n    if (target.tagName === \"BUTTON\") {\n      return;\n    }\n    if (target.tagName === \"TD\" || target.tagName === \"TABLE\") {\n      target = e.target.parentNode.parentNode.parentNode.parentNode;\n    }\n    return target;\n  };\n\n  const findShiftX = (e, target) =>\n    e.clientX - target.getBoundingClientRect().left;\n\n  const findShiftY = (e, target) =>\n    e.clientY - target.getBoundingClientRect().top;\n\n  const moveAt = (pageX, pageY, shiftX, shiftY, target) => {\n    if (pageX - shiftX < 0 || pageY - shiftY < 0) {\n      return;\n    }\n    target.style.transform = `translate(${pageX - shiftX}px, ${pageY -\n      shiftY}px)`;\n  };\n\n  const onMouseMove = e => {\n    moveAt(e.pageX, e.pageY, shiftX, shiftY, target);\n  };\n\n  return (\n    <>\n      {arrayOfTables.map((_, i) => (\n        <TableWrapper\n          key={i}\n          onDragStart={e => {\n            e.preventDefault();\n          }}\n          onMouseDown={e => {\n            target = findTargetForMoving(e);\n\n            if (target) {\n              shiftX = findShiftX(e, target);\n              shiftY = findShiftY(e, target);\n              moveAt(e.pageX, e.pageY, shiftX, shiftY, target);\n              document.addEventListener(\"mousemove\", onMouseMove);\n              target.onmouseup = function() {\n                document.removeEventListener(\"mousemove\", onMouseMove);\n                target.onmouseup = null;\n              };\n            }\n          }}\n        >\n          <Table\n            initialWidth={initialWidth}\n            initialHeight={initialHeight}\n            cellSize={cellSize}\n          />\n        </TableWrapper>\n      ))}\n    </>\n  );\n};\n\nexport default Tables;\n","import React from \"react\";\nimport Tables from \"../src/components/tables/Tables\";\n\nexport const amountTables = +process.env.REACT_APP_AMOUNT_TABLES;\nexport const initialWidth = +process.env.REACT_APP_INITIAL_WIDTH;\nexport const initialHeight = +process.env.REACT_APP_INITIAL_HEIGHT;\nexport const cellSize = +process.env.REACT_APP_CELL_SIZE;\n\nconst App = () => <Tables />;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"../src/styles/main.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}